<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/05/19/hello-world/"/>
      <url>/2024/05/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SerV00部署One-api、New-api</title>
      <link href="/2024/05/19/SerV00%E9%83%A8%E7%BD%B2One-api%E3%80%81New-api/"/>
      <url>/2024/05/19/SerV00%E9%83%A8%E7%BD%B2One-api%E3%80%81New-api/</url>
      
        <content type="html"><![CDATA[<h1 id="SerV00部署One-api、New-api、M-One-api"><a href="#SerV00部署One-api、New-api、M-One-api" class="headerlink" title="SerV00部署One-api、New-api、M-One-api"></a>SerV00部署One-api、New-api、M-One-api</h1><h2 id="登录SerV00的Panel添加站点"><a href="#登录SerV00的Panel添加站点" class="headerlink" title="登录SerV00的Panel添加站点"></a>登录SerV00的Panel添加站点</h2><h3 id="在Cloudflare上添加一个域名"><a href="#在Cloudflare上添加一个域名" class="headerlink" title="在Cloudflare上添加一个域名"></a>在Cloudflare上添加一个域名</h3><blockquote><p>也可使用Serv00送的域名，但大多数地区已经封堵无法使用</p></blockquote><h3 id="首先在-Panel-中放行一个端口，接着按照下表-Add-a-New-Website"><a href="#首先在-Panel-中放行一个端口，接着按照下表-Add-a-New-Website" class="headerlink" title="首先在 Panel 中放行一个端口，接着按照下表 Add a New Website"></a>首先在 Panel 中放行一个端口，接着按照下表 Add a New Website</h3><table><thead><tr><th>KEY</th><th>Value</th></tr></thead><tbody><tr><td>Domain</td><td><code>xxx.USERNAME.serv00.net</code>（也可以把原有的USERNAME.serv00.net删掉后重新添加）</td></tr><tr><td>WWebsite Type</td><td>proxy</td></tr><tr><td>Proxy Target</td><td>localhost</td></tr><tr><td>Proxy URL</td><td>留空</td></tr><tr><td>Proxy port</td><td>你准备用来部署 One-API 的端口</td></tr><tr><td>Use HTPPS</td><td>False</td></tr><tr><td>DNS support</td><td>True</td></tr></tbody></table><h3 id="添加SSL证书"><a href="#添加SSL证书" class="headerlink" title="添加SSL证书"></a>添加SSL证书</h3><blockquote><p>添加完新站点后，继续点击上方的 Manage SSL certificates ，接着在出口 IP 的右侧点击 Manage ，再点击 Add certificate</p></blockquote><table><thead><tr><th>Type</th><th>Domain</th></tr></thead><tbody><tr><td>Generate Let’s Encrypted certificate</td><td>与刚刚添加的站点域名保持一致（如果是原有的<code>USERNAME.serv00.net</code> ，可以省略此步）</td></tr></tbody></table><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><h3 id="SSH登入（账号密码即为登录Panel的账号密码）"><a href="#SSH登入（账号密码即为登录Panel的账号密码）" class="headerlink" title="SSH登入（账号密码即为登录Panel的账号密码）"></a>SSH登入（账号密码即为登录Panel的账号密码）</h3><blockquote><p>进入刚刚你新建的域名目录下的 <code>public_html</code> 路径下，路径为：<code>/home/用户名/domains/刚添加的域名/public_html</code></p></blockquote><h4 id="下载-one-api"><a href="#下载-one-api" class="headerlink" title="下载 one-api"></a>下载 one-api</h4><blockquote><p>下面是one-api的地址，如果是New-api或者M-One-api，替换为New-api的地址即可，脚本中执行的二进制文件也需根据实际名称进行修改</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">release_info=$(curl -s https://api.github.com/repos/k0baya/one-api-freebsd/releases/latest)</span><br><span class="line">asset_url=$(echo &quot;$release_info&quot; | jq -r &#x27;.assets[] | select(.name != &quot;source code&quot;) | .browser_download_url&#x27;)</span><br><span class="line">curl -L -o one-api &quot;$asset_url&quot; &amp;&amp; chmod +x one-api</span><br></pre></td></tr></table></figure><h4 id="新建启动脚本"><a href="#新建启动脚本" class="headerlink" title="新建启动脚本"></a>新建启动脚本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; start.sh &lt;&lt; EOF</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果你有设置主题的需要，可以取消注释下一行，然后按照自己的需求设置。</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">export</span> THEME=<span class="string">&quot;berry&quot;</span></span></span><br><span class="line">export TIKTOKEN_CACHE_DIR=&quot;$PWD&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把下一行的 PORT 改为自己放行的端口</span></span><br><span class="line">exec ./one-api --port PORT --log-dir ./logs</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="设置脚本的可执行权限"><a href="#设置脚本的可执行权限" class="headerlink" title="设置脚本的可执行权限"></a>设置脚本的可执行权限</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod +x start.sh</span><br></pre></td></tr></table></figure><h4 id="测试运行-确定运行没有问题后，按-Ctrl-c即可停止运行。"><a href="#测试运行-确定运行没有问题后，按-Ctrl-c即可停止运行。" class="headerlink" title="测试运行,确定运行没有问题后，按 Ctrl+c即可停止运行。"></a>测试运行,确定运行没有问题后，按 <code>Ctrl+c</code>即可停止运行。</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./start.sh</span><br></pre></td></tr></table></figure><h4 id="使用pm2启动并管理"><a href="#使用pm2启动并管理" class="headerlink" title="使用pm2启动并管理"></a>使用pm2启动并管理</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pm2 start ./start.sh --name one-api</span><br></pre></td></tr></table></figure><h2 id="附上二进制源码作者的地址"><a href="#附上二进制源码作者的地址" class="headerlink" title="附上二进制源码作者的地址"></a>附上二进制源码作者的地址</h2><blockquote><p>部署<code>M-One Api</code>请注意，下载后的文件为<code>tar.gz</code>的压缩文件，需解压后执行<code>start.sh</code>脚本</p></blockquote><table><thead><tr><th>名称</th><th>源码地址</th></tr></thead><tbody><tr><td>One Api</td><td><a href="https://github.com/k0baya/one-api-freebsd">https://github.com/k0baya/one-api-freebsd</a></td></tr><tr><td>New Api</td><td><a href="https://github.com/k0baya/new-api-freebsd">https://github.com/k0baya/new-api-freebsd</a></td></tr><tr><td>M-One Api</td><td><a href="https://github.com/k0baya/one-api-berry-freebsd">https://github.com/k0baya/one-api-berry-freebsd</a></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> ChatGPT </tag>
            
            <tag> One Api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装</title>
      <link href="/2024/05/12/docker/"/>
      <url>/2024/05/12/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="离线安装Docker"><a href="#离线安装Docker" class="headerlink" title="离线安装Docker"></a>离线安装Docker</h1><h3 id="有网环节进行打包"><a href="#有网环节进行打包" class="headerlink" title="有网环节进行打包"></a>有网环节进行打包</h3><h4 id="设置存储库"><a href="#设置存储库" class="headerlink" title="设置存储库"></a>设置存储库</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager \</span><br><span class="line">--add-repo \</span><br><span class="line">https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h4 id="下载包"><a href="#下载包" class="headerlink" title="下载包"></a>下载包</h4><ul><li>下载三个包到<code>tmp/offline_rpm</code>文件目录下</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io --downloadonly --downloaddir=/tmp/offline_rpm</span><br></pre></td></tr></table></figure><blockquote><p>注：提前建好 tmp&#x2F;offline_rpm 文件夹</p></blockquote><h4 id="创建本地yum仓库"><a href="#创建本地yum仓库" class="headerlink" title="创建本地yum仓库"></a>创建本地yum仓库</h4><ul><li>创建本yum仓库，创建好的仓库目录会出现<code> repodata子目录</code></li></ul><ul><li>测试</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">createrepo /tmp/offline_rpm</span><br></pre></td></tr></table></figure><blockquote><p>注：使用createrepo来创建repository仓库，如果系统里没有该命令的话需要先进行createrepo的安装yum install createrepo</p></blockquote><hr><h3 id="离线环境安装Docker"><a href="#离线环境安装Docker" class="headerlink" title="离线环境安装Docker"></a>离线环境安装Docker</h3><h4 id="文件拷贝"><a href="#文件拷贝" class="headerlink" title="文件拷贝"></a>文件拷贝</h4><ul><li>将上面的<code>/tmp/offline_rpm</code>下所有文件拷贝到<code>离线环境</code>中（例如：<code>拷贝到/tmp</code>）</li></ul><h4 id="转移yum-repos-d文件"><a href="#转移yum-repos-d文件" class="headerlink" title="转移yum.repos.d文件"></a>转移yum.repos.d文件</h4><ul><li>将<code>etc/yum.repos.d</code> 下所有文件转移至 <code>bak文件夹</code>下（bak为自己创建）</li></ul><blockquote><p>注：转移<code>yum.repos.d</code>只作为备份使用，无其他目的</p></blockquote><h4 id="新建repo文件"><a href="#新建repo文件" class="headerlink" title="新建repo文件"></a>新建repo文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/new.repo</span><br><span class="line">[New]</span><br><span class="line">name=New</span><br><span class="line">baseurl=file:///tmp/offline_rpm</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><h4 id="清理yum"><a href="#清理yum" class="headerlink" title="清理yum"></a>清理yum</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><h4 id="正常安装Docker"><a href="#正常安装Docker" class="headerlink" title="正常安装Docker"></a>正常安装Docker</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 知识 </category>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2024/05/11/%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/05/11/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><h4 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h4>]]></content>
      
      
      
        <tags>
            
            <tag> Code </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
